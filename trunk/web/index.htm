<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>KO Webmail</title>
    <script type="text/javascript" src="jquery-1.7.2.js"></script>
    <script type="text/javascript" src="jquery-ui.min.js"></script>
    <script type="text/javascript" src="knockout-2.1.0.js"></script>
    <script src="sammy.js" type="text/javascript"></script>
    <link href="jquery-ui.css" rel="stylesheet" type="text/css" />
    <link rel="Stylesheet" href="coderunner.css" />
    <link rel="Stylesheet" href="webmail.css" />
</head>
<body>
    <!-- 最上面的菜单导航栏 -->
    <ul class="folders" data-bind="foreach: folders">
        <li data-bind="text: $data.display, 
                       css: { selected: $data == $root.chosenFolderId() },
                       click: $root.goToFolder"></li>
    </ul>
    
    <!-- 根据车次和出发日期查询的界面，背后的model是findTrain -->
    <!--
	model:
	findTrain: {
	    no: 'G101',       // 车次号
	    date: '2012/12/8' // 要查询的日期
	};
      -->
    <div class="viewMail" data-bind="with: findTrain">
        <div class="mailInfo">
            <p>
               <label>车次</label>: <input type="text" id="txtNo" name="start" data-bind="value: no" /> &nbsp; 
               <label>出发日期</label>: <input type="text" id="txtDate" class="date-editor" name="date" data-bind="value: date" /> &nbsp;
               <a href="#query-result">查询</a>
            </p>
        </div>
    </div>
    
    <!-- 显示车次查询结果的列表界面，背后的model是trainQueryResult -->
    <!--
	model:

	trainQueryResult: {
	    name: 'G101',        // 车次号
	    departure: '北京',   // 始发站
	    termination: '上海', // 终点站
	    departureTime: '2012/12/8 08:00', // 发车时间
	    arrivalTime: '2012/12/8 15:00',   // 到达时间
	    availables: {
	        '硬座': '2',
		'硬卧上': '11',
		'硬卧中': '无票',
		'硬卧下': '有票'
	    }
	};
      -->
    <table class="mails" data-bind="with: trainQueryResult">
        <thead><tr><th></th><th>车次</th><th>发站</th><th>到站</th><th>发时</th><th>到时</th><th>参考票价</th></tr></thead>
        <tbody data-bind="foreach: $data">
            <tr data-bind="click: $root.goToMail">
                <td><a data-bind="attr: {href: readyMakeOrder(name)}">购买</a></td>
                <td data-bind="text: name"></td>
                <td data-bind="text: departure"></td>
                <td data-bind="text: termination"></td>
                <td data-bind="text: departureTime"></td>
                <td data-bind="text: arrivalTime"></td>
                <td>
                    <ul data-bind="foreach: availables">
                        <li>
                            <span data-bind="text: $data[Object.keys($data)]"></span>
                        </li>
                    </ul>
                </td>
            </tr>     
        </tbody>
    </table>
        
    <!-- 购票界面 -->
    <!--
	model
	
	buyTicket: {
	    train: 'G101',           // 车次号
	    seat: 10,                // 座位号
	    departure: '北京',        // 上车站点
	    termination: '南京',      // 下车站点
	    id: '1234567891203',     // 购票人身份证号
	    date: '2012/12/9 08:00'  // 上车时间
	}
      -->
    <div class="viewMail" data-bind="with: buyTicket">
        <div class="mailInfo">
            <p>
               <label>车次</label>: <input type="text" id="txtTrain" data-bind="value: train" /> &nbsp; 
               <label>座位号</label>: <input type="text" id="txtTicket" data-bind="value: seat" /> &nbsp; 
               <br />
               <label>上车站点</label>: <input type="text" id="txtDeparture" data-bind="value: departure" /> &nbsp; 
               <label>下车站点</label>: <input type="text" id="txtTermination" data-bind="value: termination" /> &nbsp; 
               <br />
               <label>身份证号</label>: <input type="text" id="txtId" data-bind="value: id" /> &nbsp;
               <label>出发日期</label>: <input type="text" id="txtDate" data-bind="value: date" /> &nbsp;
            </p>
            <a href="#order-result">买票</a>
        </div>
    </div>

    <!-- 购票成功界面 -->
    <!-- TODO: 在购票成功界面上添加购到的车次、日期和座位号信息 -->
    <div class="viewMail" data-bind="with: orderStatus">
        <div class="mailInfo"data-bind="visible: $data" >恭喜你，买到票啦！</div>
    </div>

    <script type="text/javascript">
        function queryTrains(condition, ret) {
            // 需要支持跨域访问
            $.ajax({
                url: 'http://localhost:12306/ticket/id/' + condition.no + '?jsonpcallback=?',
                dataType: 'jsonp',
                jsonp: 'jsonpcallback',
                crossDomain: true,
                success: function (data) {
                    ret(data.train);
                }
            });
        }

        function readyMakeOrder(train) {
            return '#buy/' + train + '/' + Math.ceil(Math.random() * 100).toString();
        }

        function WebmailViewModel() {
            // Data
            var self = this;
            // 菜单导航栏背后的数据
            self.folders = [
                { display: '查询', hash: 'query' },
                { display: '上一次车次查询结果', hash: 'query-result' },
                { display: '买票', hash: 'buy' }
            ];

            // 各个视图（view）后面的数据（model）
            self.chosenFolderId = ko.observable();
            self.trainQueryResult = ko.observable();
            self.buyTicket = ko.observable();
            self.findTrain = ko.observable();
            self.orderStatus = ko.observable(false);

            // 用于控制菜单栏导航的函数，通过修改当前浏览器的hash来切换界面
            self.goToFolder = function (folder) { location.hash = folder.hash };
            // 触发买票的函数
            self.goToMail = function (mail) { location.hash = mail.folder + '/' + mail.id };

            Sammy(function () {
                // 显示车次查询界面
                this.get('#query', function () {
                    self.buyTicket(null);
                    self.trainQueryResult(null);
                    self.orderStatus(null);

                    self.findTrain({ no: 'G101', date: '11/19/2012' });
                });

                // 显示购票界面
                this.get('#buy/:train/:ticket', function () {
                    self.buyTicket({
                        train: this.params.train,
                        seat: this.params.ticket,
                        departure: '南京',
                        termination: '济南',
                        id: '123456789123456',
                        date: '11/19/2012'
                    });

                    self.trainQueryResult(null);
                    self.orderStatus(null);
                    self.findTrain(null);
                });

                // 显示车次查询结果
                this.get('#query-result', function () {
                    queryTrains(self.findTrain(), self.trainQueryResult);
                    self.buyTicket(null);
                    self.findTrain(null);
                    self.orderStatus(null);
                });

                // 显示购票结果
                this.get('#order-result', function () {
                    var order = self.buyTicket();

                    $.ajax({
                        url: 'http://localhost:12306/ticket/make?train=' + order.train +
                                                               '&seat=' + order.seat +
                                                               '&departure=' + escape(order.departure) +
                                                               '&termination=' + escape(order.termination) +
                                                               '&id=' + order.id +
                                                               '&date=' + escape(order.date) + '&jsonpcallback=?',
                        dataType: 'jsonp',
                        jsonp: 'jsonpcallback',
                        crossDomain: true
                    });

                    self.buyTicket(null);
                    self.findTrain(null);
                    self.trainQueryResult(null);
                    self.orderStatus(true);
                });

                // 默认显示根据车次查询的页面
                this.get('', function () { this.app.runRoute('get', '#query') });
            }).run();
        };

        /*
         * TODO: 加上在日期型文本框上自动附加datepicker的功能
         * 下面这个回调函数可以正确地在日期型文本框是自动附上jquery datepicker
         * 但问题是，附上去以后，背后的模型（model）与视图（view）就不能双向绑定了。
         * 因此我临时将其注释了。
        ko.bindingHandlers.value = {
        init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
        if ($(element).attr('class') == 'date-editor') {
        $(element).datepicker();
        }
        }
        };
        */
        ko.applyBindings(new WebmailViewModel());
    </script>
</body>
</html>
